/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    studentId?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    department?: UserDepartmentEnum;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    currentGrade?: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    currentSemester?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    portalId?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    hashedPortalPassword?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    salt?: string;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    createdAt?: number;
    /**
     * 
     * @type {number}
     * @memberof User
     */
    updatedAt?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    password?: string;
}


/**
 * @export
 */
export const UserDepartmentEnum = {
    ComputerScience: 'ComputerScience',
    GeneralEducation: 'GeneralEducation'
} as const;
export type UserDepartmentEnum = typeof UserDepartmentEnum[keyof typeof UserDepartmentEnum];


/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'studentId': json['studentId'] == null ? undefined : json['studentId'],
        'department': json['department'] == null ? undefined : json['department'],
        'currentGrade': json['currentGrade'] == null ? undefined : json['currentGrade'],
        'currentSemester': json['currentSemester'] == null ? undefined : json['currentSemester'],
        'portalId': json['portalId'] == null ? undefined : json['portalId'],
        'hashedPortalPassword': json['hashedPortalPassword'] == null ? undefined : json['hashedPortalPassword'],
        'salt': json['salt'] == null ? undefined : json['salt'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'password': json['password'] == null ? undefined : json['password'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'studentId': value['studentId'],
        'department': value['department'],
        'currentGrade': value['currentGrade'],
        'currentSemester': value['currentSemester'],
        'portalId': value['portalId'],
        'hashedPortalPassword': value['hashedPortalPassword'],
        'salt': value['salt'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'password': value['password'],
    };
}

